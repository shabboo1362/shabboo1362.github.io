{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { writeTask, proxyCustomElement, HTMLElement, createEvent, readTask, h, Host } from '@stencil/core/internal/client';\nimport { a as isPlatform, b as getIonMode } from './ionic-global.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { I as ION_CONTENT_ELEMENT_SELECTOR, p as printIonContentErrorMsg, b as ION_CONTENT_CLASS_SELECTOR, g as getScrollElement } from './index9.js';\nimport { t as transitionEndAsync, c as componentOnReady, h as clamp, g as getElementRoot, r as raf } from './helpers.js';\nimport { h as hapticImpact } from './haptic.js';\nimport { c as createAnimation } from './animation.js';\nconst getRefresherAnimationType = contentEl => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner, refresherEl) => {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner, refresherEl) : createTranslateAnimation(pullingSpinner, refresherEl);\n};\nconst createBaseAnimation = pullingRefresherIcon => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = arrowContainer ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation().duration(1000).easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation().addElement(spinnerArrowContainer).keyframes([{\n    offset: 0,\n    opacity: '0.3'\n  }, {\n    offset: 0.45,\n    opacity: '0.3'\n  }, {\n    offset: 0.55,\n    opacity: '1'\n  }, {\n    offset: 1,\n    opacity: '1'\n  }]);\n  const circleInnerAnimation = createAnimation().addElement(circle).keyframes([{\n    offset: 0,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.2,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.55,\n    strokeDasharray: '100px, 200px'\n  }, {\n    offset: 1,\n    strokeDasharray: '100px, 200px'\n  }]);\n  const circleOuterAnimation = createAnimation().addElement(spinner).keyframes([{\n    offset: 0,\n    transform: 'rotate(-90deg)'\n  }, {\n    offset: 1,\n    transform: 'rotate(210deg)'\n  }]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation().addElement(arrowContainer).keyframes([{\n      offset: 0,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.3,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.55,\n      transform: 'rotate(280deg)'\n    }, {\n      offset: 1,\n      transform: 'rotate(400deg)'\n    }]);\n    const arrowAnimation = createAnimation().addElement(arrow).keyframes([{\n      offset: 0,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.3,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.55,\n      transform: 'translateX(-1.5px) scale(1)'\n    }, {\n      offset: 1,\n      transform: 'translateX(-1.5px) scale(1)'\n    }]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: `scale(0) translateY(-${height}px)`\n  }, {\n    offset: 1,\n    transform: 'scale(1) translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: `translateY(-${height}px)`\n  }, {\n    offset: 1,\n    transform: 'translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = pullingRefresherIcon => {\n  return createAnimation().duration(125).addElement(pullingRefresherIcon).fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (ticks, numTicks, pullAmount) => {\n  const max = 1;\n  writeTask(() => {\n    ticks.forEach((el, i) => {\n      /**\n       * Compute the opacity of each tick\n       * mark as a percentage of the pullAmount\n       * offset by max / numTicks so\n       * the tick marks are shown staggered.\n       */\n      const min = i * (max / numTicks);\n      const range = max - min;\n      const start = pullAmount - min;\n      const progression = clamp(0, start / range, 1);\n      el.style.setProperty('opacity', progression.toString());\n    });\n  });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', lastVelocityY >= 1.0 ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\nconst translateElement = function (el, value) {\n  let duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;\n  if (!el) {\n    return Promise.resolve();\n  }\n  const trans = transitionEndAsync(el, duration);\n  writeTask(() => {\n    el.style.setProperty('transition', `${duration}ms all ease-out`);\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    } else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = async (referenceEl, mode) => {\n  const refresherContent = referenceEl.querySelector('ion-refresher-content');\n  if (!refresherContent) {\n    return Promise.resolve(false);\n  }\n  await new Promise(resolve => componentOnReady(refresherContent, resolve));\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return pullingSpinner !== null && refreshingSpinner !== null && (mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined || mode === 'md');\n};\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native ion-spinner{width:32px;height:32px;color:var(--ion-color-step-450, #747577)}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0) rotate(180deg);transform:scale(0) rotate(180deg);-webkit-transition:300ms;transition:300ms}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid var(--ion-color-step-200, #ececec);background:var(--ion-color-step-250, #ffffff);-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\nconst Refresher = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n    this.state = 1 /* RefresherState.Inactive */;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n    this.disabled = false;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async checkNativeRefresher() {\n    const useNativeRefresher = await shouldUseNativeRefresher(this.el, getIonMode(this));\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    } else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n    this.nativeRefresher = false;\n  }\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined, 300);\n    } else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach(ani => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1 /* RefresherState.Inactive */;\n  }\n\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    let MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1 /* RefresherState.Inactive */) {\n        return;\n      }\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8 /* RefresherState.Refreshing */) {\n            const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n            writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n            return;\n          }\n          return;\n        }\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          }\n          // emit \"pulling\" on every move\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        }\n        /**\n         * We want to delay the start of this gesture by ~30px\n         * when initially pulling down so the refresher does not\n         * overlap with the content. But when letting go of the\n         * gesture before the refresher completes, we want the\n         * refresher tick marks to quickly fade out.\n         */\n        const offset = this.didStart ? 30 : 0;\n        const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - offset) / MAX_PULL, 1);\n        const shouldShowRefreshingSpinner = this.state === 8 /* RefresherState.Refreshing */ || pullAmount === 1;\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({\n              style: 'light'\n            });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        } else {\n          this.state = 2 /* RefresherState.Pulling */;\n          handleScrollWhilePulling(ticks, NUM_TICKS, pullAmount);\n        }\n      });\n    };\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n        /**\n         * If the content had `display: none` when\n         * the refresher was initialized, its clientHeight\n         * will be 0. When the gesture starts, the content\n         * will be visible, so try to get the correct\n         * client height again. This is most common when\n         * using the refresher in an ion-menu.\n         */\n        if (MAX_PULL === 0) {\n          MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        }\n      },\n      onMove: ev => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32 /* RefresherState.Completing */);\n          this.needsCompletion = false;\n        } else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      }\n    });\n    this.disabledChanged();\n  }\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none');\n        // This lines up the animation on the refreshing spinner with the pulling spinner\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8 /* RefresherState.Refreshing */ && this.state !== 32 /* RefresherState.Completing */ && this.scrollEl.scrollTop === 0,\n      onStart: ev => {\n        this.progress = 0;\n        ev.data = {\n          animation: undefined,\n          didStart: false,\n          cancelled: false\n        };\n      },\n      onMove: ev => {\n        if (ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2 /* RefresherState.Pulling */;\n          writeTask(() => this.scrollEl.style.setProperty('--overflow', 'hidden'));\n          const animationType = getRefresherAnimationType(contentEl);\n          const animation = createPullingAnimation(animationType, pullingRefresherIcon, this.el);\n          ev.data.animation = animation;\n          animation.progressStart(false, 0);\n          this.ionStart.emit();\n          this.animations.push(animation);\n          return;\n        }\n        // Since we are using an easing curve, slow the gesture tracking down a bit\n        this.progress = clamp(0, ev.deltaY / 180 * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: ev => {\n        if (!ev.data.didStart) {\n          return;\n        }\n        this.gesture.enable(false);\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n        if (this.progress <= 0.4) {\n          ev.data.animation.progressEnd(0, this.progress, 500).onFinish(() => {\n            this.animations.forEach(ani => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1 /* RefresherState.Inactive */;\n          });\n\n          return;\n        }\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${progress * 100}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n          this.gesture.enable(true);\n        });\n      }\n    });\n    this.disabledChanged();\n  }\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n    /**\n     * If using non-native refresher before make sure\n     * we clean up any old CSS. This can happen when\n     * a user manually calls the refresh method in a\n     * component create callback before the native\n     * refresher is setup.\n     */\n    this.setCss(0, '', false, '');\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    } else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n  async connectedCallback() {\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n    const contentEl = this.el.closest(ION_CONTENT_ELEMENT_SELECTOR);\n    if (!contentEl) {\n      printIonContentErrorMsg(this.el);\n      return;\n    }\n    /**\n     * Waits for the content to be ready before querying the scroll\n     * or the background content element.\n     */\n    componentOnReady(contentEl, async () => {\n      const customScrollTarget = contentEl.querySelector(ION_CONTENT_CLASS_SELECTOR);\n      /**\n       * Query the custom scroll target (if available), first. In refresher implementations,\n       * the ion-refresher element will always be a direct child of ion-content (slot=\"fixed\"). By\n       * querying the custom scroll target first and falling back to the ion-content element,\n       * the correct scroll element will be returned by the implementation.\n       */\n      this.scrollEl = await getScrollElement(customScrollTarget !== null && customScrollTarget !== void 0 ? customScrollTarget : contentEl);\n      /**\n       * Query the background content element from the host ion-content element directly.\n       */\n      this.backgroundContentEl = await contentEl.getBackgroundElement();\n      if (await shouldUseNativeRefresher(this.el, getIonMode(this))) {\n        this.setupNativeRefresher(contentEl);\n      } else {\n        this.gesture = (await import('./index2.js')).createGesture({\n          el: contentEl,\n          gestureName: 'refresher',\n          gesturePriority: 31,\n          direction: 'y',\n          threshold: 20,\n          passive: false,\n          canStart: () => this.canStart(),\n          onStart: () => this.onStart(),\n          onMove: ev => this.onMove(ev),\n          onEnd: () => this.onEnd()\n        });\n        this.disabledChanged();\n      }\n    });\n  }\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true;\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* RefresherState.Completing */)));\n      }\n    } else {\n      this.close(32 /* RefresherState.Completing */, '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* RefresherState.Cancelling */)));\n      }\n    } else {\n      this.close(16 /* RefresherState.Cancelling */, '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n    if (this.state !== 1 /* RefresherState.Inactive */) {\n      return false;\n    }\n    // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n    return true;\n  }\n  onStart() {\n    this.progress = 0;\n    this.state = 1 /* RefresherState.Inactive */;\n  }\n\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    }\n    // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n    const ev = detail.event;\n    if (ev.touches !== undefined && ev.touches.length > 1) {\n      return;\n    }\n    // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n    if ((this.state & 56 /* RefresherState._BUSY_ */) !== 0) {\n      return;\n    }\n    const pullFactor = Number.isNaN(this.pullFactor) || this.pullFactor < 0 ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor;\n    // don't bother if they're scrolling up\n    // and have not already started dragging\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1 /* RefresherState.Inactive */;\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n      return;\n    }\n    if (this.state === 1 /* RefresherState.Inactive */) {\n      // this refresh is not already actively pulling down\n      // get the content's scrollTop\n      const scrollHostScrollTop = this.scrollEl.scrollTop;\n      // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n      if (scrollHostScrollTop > 0) {\n        this.progress = 0;\n        return;\n      }\n      // content scrolled all the way to the top, and dragging down\n      this.state = 2 /* RefresherState.Pulling */;\n    }\n    // prevent native scroll events\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n    // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n    this.setCss(deltaY, '0ms', true, '');\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n    const pullMin = this.pullMin;\n    // set pull progress\n    this.progress = deltaY / pullMin;\n    // emit \"start\" if it hasn't started yet\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    }\n    // emit \"pulling\" on every move\n    this.ionPull.emit();\n    // do nothing if the delta is less than the pull threshold\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2 /* RefresherState.Pulling */;\n      return;\n    }\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    }\n    // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n    this.state = 4 /* RefresherState.Ready */;\n    return;\n  }\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4 /* RefresherState.Ready */) {\n      // they pulled down far enough, so it's ready to refresh\n      this.beginRefresh();\n    } else if (this.state === 2 /* RefresherState.Pulling */) {\n      // they were pulling down, but didn't pull down far enough\n      // set the content back to it's original location\n      // and close the refresher\n      // set that the refresh is actively cancelling\n      this.cancel();\n    }\n  }\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8 /* RefresherState.Refreshing */;\n    // place the content in a hangout position while it thinks\n    this.setCss(this.pullMin, this.snapbackDuration, true, '');\n    // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this)\n    });\n  }\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1 /* RefresherState.Inactive */;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600);\n    // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay);\n  }\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n    this.appliedStyles = y > 0;\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = y > 0 ? `translateY(${y}px) translateZ(0px)` : '';\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = overflowVisible ? 'hidden' : '';\n      }\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      slot: \"fixed\",\n      class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1 /* RefresherState.Inactive */,\n        'refresher-pulling': this.state === 2 /* RefresherState.Pulling */,\n        'refresher-ready': this.state === 4 /* RefresherState.Ready */,\n        'refresher-refreshing': this.state === 8 /* RefresherState.Refreshing */,\n        'refresher-cancelling': this.state === 16 /* RefresherState.Cancelling */,\n        'refresher-completing': this.state === 32 /* RefresherState.Completing */\n      }\n    });\n  }\n\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"disabled\": [\"disabledChanged\"]\n    };\n  }\n  static get style() {\n    return {\n      ios: refresherIosCss,\n      md: refresherMdCss\n    };\n  }\n}, [32, \"ion-refresher\", {\n  \"pullMin\": [2, \"pull-min\"],\n  \"pullMax\": [2, \"pull-max\"],\n  \"closeDuration\": [1, \"close-duration\"],\n  \"snapbackDuration\": [1, \"snapback-duration\"],\n  \"pullFactor\": [2, \"pull-factor\"],\n  \"disabled\": [4],\n  \"nativeRefresher\": [32],\n  \"state\": [32],\n  \"complete\": [64],\n  \"cancel\": [64],\n  \"getProgress\": [64]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-refresher\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-refresher\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Refresher);\n        }\n        break;\n    }\n  });\n}\nconst IonRefresher = Refresher;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonRefresher, defineCustomElement };","map":{"version":3,"names":["writeTask","proxyCustomElement","HTMLElement","createEvent","readTask","h","Host","a","isPlatform","b","getIonMode","g","getTimeGivenProgression","I","ION_CONTENT_ELEMENT_SELECTOR","p","printIonContentErrorMsg","ION_CONTENT_CLASS_SELECTOR","getScrollElement","t","transitionEndAsync","c","componentOnReady","clamp","getElementRoot","r","raf","hapticImpact","createAnimation","getRefresherAnimationType","contentEl","previousSibling","previousElementSibling","hasHeader","tagName","createPullingAnimation","type","pullingSpinner","refresherEl","createScaleAnimation","createTranslateAnimation","createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","transform","arrowContainerAnimation","arrowAnimation","addAnimation","height","clientHeight","spinnerAnimation","createSnapBackAnimation","fromTo","setSpinnerOpacity","style","setProperty","toString","handleScrollWhilePulling","ticks","numTicks","pullAmount","max","forEach","el","i","min","range","start","progression","handleScrollWhileRefreshing","lastVelocityY","translateElement","value","Promise","resolve","trans","undefined","removeProperty","shouldUseNativeRefresher","referenceEl","mode","refresherContent","refreshingSpinner","webkitOverflowScrolling","refresherIosCss","refresherMdCss","Refresher","constructor","__registerHost","ionRefresh","ionPull","ionStart","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","disabledChanged","gesture","enable","checkNativeRefresher","useNativeRefresher","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","removeEventListener","resetNativeRefresher","ani","destroy","setupiOSNativeRefresher","elementToTransform","querySelectorAll","MAX_PULL","NUM_TICKS","length","scrollTop","refresherHeight","ratio","emit","Math","abs","shouldShowRefreshingSpinner","beginRefresh","addEventListener","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","ev","velocityY","onEnd","setupMDNativeRefresher","refreshingCircle","canStart","data","animation","cancelled","animationType","progressStart","push","deltaY","progressStep","progressEnd","onFinish","snapBackAnimation","play","setCss","componentDidUpdate","connectedCallback","getAttribute","console","error","customScrollTarget","backgroundContentEl","getBackgroundElement","passive","disconnectedCallback","complete","close","cancel","getProgress","detail","event","touches","Number","isNaN","scrollHostScrollTop","cancelable","preventDefault","bind","delay","setTimeout","y","overflowVisible","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","render","slot","class","watchers","ios","md","defineCustomElement$1","customElements","components","get","define","IonRefresher","defineCustomElement"],"sources":["C:/Users/Runahi/e-commerce1/node_modules/@ionic/core/components/ion-refresher.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { writeTask, proxyCustomElement, HTMLElement, createEvent, readTask, h, Host } from '@stencil/core/internal/client';\nimport { a as isPlatform, b as getIonMode } from './ionic-global.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { I as ION_CONTENT_ELEMENT_SELECTOR, p as printIonContentErrorMsg, b as ION_CONTENT_CLASS_SELECTOR, g as getScrollElement } from './index9.js';\nimport { t as transitionEndAsync, c as componentOnReady, h as clamp, g as getElementRoot, r as raf } from './helpers.js';\nimport { h as hapticImpact } from './haptic.js';\nimport { c as createAnimation } from './animation.js';\n\nconst getRefresherAnimationType = (contentEl) => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner, refresherEl) => {\n  return type === 'scale'\n    ? createScaleAnimation(pullingSpinner, refresherEl)\n    : createTranslateAnimation(pullingSpinner, refresherEl);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = arrowContainer ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation().duration(1000).easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation()\n    .addElement(spinnerArrowContainer)\n    .keyframes([\n    { offset: 0, opacity: '0.3' },\n    { offset: 0.45, opacity: '0.3' },\n    { offset: 0.55, opacity: '1' },\n    { offset: 1, opacity: '1' },\n  ]);\n  const circleInnerAnimation = createAnimation()\n    .addElement(circle)\n    .keyframes([\n    { offset: 0, strokeDasharray: '1px, 200px' },\n    { offset: 0.2, strokeDasharray: '1px, 200px' },\n    { offset: 0.55, strokeDasharray: '100px, 200px' },\n    { offset: 1, strokeDasharray: '100px, 200px' },\n  ]);\n  const circleOuterAnimation = createAnimation()\n    .addElement(spinner)\n    .keyframes([\n    { offset: 0, transform: 'rotate(-90deg)' },\n    { offset: 1, transform: 'rotate(210deg)' },\n  ]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation()\n      .addElement(arrowContainer)\n      .keyframes([\n      { offset: 0, transform: 'rotate(0deg)' },\n      { offset: 0.3, transform: 'rotate(0deg)' },\n      { offset: 0.55, transform: 'rotate(280deg)' },\n      { offset: 1, transform: 'rotate(400deg)' },\n    ]);\n    const arrowAnimation = createAnimation()\n      .addElement(arrow)\n      .keyframes([\n      { offset: 0, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.3, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n      { offset: 1, transform: 'translateX(-1.5px) scale(1)' },\n    ]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `scale(0) translateY(-${height}px)` },\n    { offset: 1, transform: 'scale(1) translateY(100px)' },\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `translateY(-${height}px)` },\n    { offset: 1, transform: 'translateY(100px)' },\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n  return createAnimation()\n    .duration(125)\n    .addElement(pullingRefresherIcon)\n    .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (ticks, numTicks, pullAmount) => {\n  const max = 1;\n  writeTask(() => {\n    ticks.forEach((el, i) => {\n      /**\n       * Compute the opacity of each tick\n       * mark as a percentage of the pullAmount\n       * offset by max / numTicks so\n       * the tick marks are shown staggered.\n       */\n      const min = i * (max / numTicks);\n      const range = max - min;\n      const start = pullAmount - min;\n      const progression = clamp(0, start / range, 1);\n      el.style.setProperty('opacity', progression.toString());\n    });\n  });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', lastVelocityY >= 1.0 ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\nconst translateElement = (el, value, duration = 200) => {\n  if (!el) {\n    return Promise.resolve();\n  }\n  const trans = transitionEndAsync(el, duration);\n  writeTask(() => {\n    el.style.setProperty('transition', `${duration}ms all ease-out`);\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    }\n    else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = async (referenceEl, mode) => {\n  const refresherContent = referenceEl.querySelector('ion-refresher-content');\n  if (!refresherContent) {\n    return Promise.resolve(false);\n  }\n  await new Promise((resolve) => componentOnReady(refresherContent, resolve));\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return (pullingSpinner !== null &&\n    refreshingSpinner !== null &&\n    ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n      mode === 'md'));\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native ion-spinner{width:32px;height:32px;color:var(--ion-color-step-450, #747577)}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0) rotate(180deg);transform:scale(0) rotate(180deg);-webkit-transition:300ms;transition:300ms}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid var(--ion-color-step-200, #ececec);background:var(--ion-color-step-250, #ffffff);-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Refresher = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n    this.state = 1 /* RefresherState.Inactive */;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n    this.disabled = false;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async checkNativeRefresher() {\n    const useNativeRefresher = await shouldUseNativeRefresher(this.el, getIonMode(this));\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    }\n    else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n    this.nativeRefresher = false;\n  }\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined, 300);\n    }\n    else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach((ani) => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1 /* RefresherState.Inactive */;\n  }\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    let MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach((el) => el.style.setProperty('animation', 'none')));\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1 /* RefresherState.Inactive */) {\n        return;\n      }\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8 /* RefresherState.Refreshing */) {\n            const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n            writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n            return;\n          }\n          return;\n        }\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          }\n          // emit \"pulling\" on every move\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        }\n        /**\n         * We want to delay the start of this gesture by ~30px\n         * when initially pulling down so the refresher does not\n         * overlap with the content. But when letting go of the\n         * gesture before the refresher completes, we want the\n         * refresher tick marks to quickly fade out.\n         */\n        const offset = this.didStart ? 30 : 0;\n        const pullAmount = (this.progress = clamp(0, (Math.abs(scrollTop) - offset) / MAX_PULL, 1));\n        const shouldShowRefreshingSpinner = this.state === 8 /* RefresherState.Refreshing */ || pullAmount === 1;\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({ style: 'light' });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        }\n        else {\n          this.state = 2 /* RefresherState.Pulling */;\n          handleScrollWhilePulling(ticks, NUM_TICKS, pullAmount);\n        }\n      });\n    };\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n        /**\n         * If the content had `display: none` when\n         * the refresher was initialized, its clientHeight\n         * will be 0. When the gesture starts, the content\n         * will be visible, so try to get the correct\n         * client height again. This is most common when\n         * using the refresher in an ion-menu.\n         */\n        if (MAX_PULL === 0) {\n          MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        }\n      },\n      onMove: (ev) => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32 /* RefresherState.Completing */);\n          this.needsCompletion = false;\n        }\n        else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none');\n        // This lines up the animation on the refreshing spinner with the pulling spinner\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8 /* RefresherState.Refreshing */ &&\n        this.state !== 32 /* RefresherState.Completing */ &&\n        this.scrollEl.scrollTop === 0,\n      onStart: (ev) => {\n        this.progress = 0;\n        ev.data = { animation: undefined, didStart: false, cancelled: false };\n      },\n      onMove: (ev) => {\n        if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2 /* RefresherState.Pulling */;\n          writeTask(() => this.scrollEl.style.setProperty('--overflow', 'hidden'));\n          const animationType = getRefresherAnimationType(contentEl);\n          const animation = createPullingAnimation(animationType, pullingRefresherIcon, this.el);\n          ev.data.animation = animation;\n          animation.progressStart(false, 0);\n          this.ionStart.emit();\n          this.animations.push(animation);\n          return;\n        }\n        // Since we are using an easing curve, slow the gesture tracking down a bit\n        this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: (ev) => {\n        if (!ev.data.didStart) {\n          return;\n        }\n        this.gesture.enable(false);\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n        if (this.progress <= 0.4) {\n          ev.data.animation.progressEnd(0, this.progress, 500).onFinish(() => {\n            this.animations.forEach((ani) => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1 /* RefresherState.Inactive */;\n          });\n          return;\n        }\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${progress * 100}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n          this.gesture.enable(true);\n        });\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n    /**\n     * If using non-native refresher before make sure\n     * we clean up any old CSS. This can happen when\n     * a user manually calls the refresh method in a\n     * component create callback before the native\n     * refresher is setup.\n     */\n    this.setCss(0, '', false, '');\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    }\n    else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n  async connectedCallback() {\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n    const contentEl = this.el.closest(ION_CONTENT_ELEMENT_SELECTOR);\n    if (!contentEl) {\n      printIonContentErrorMsg(this.el);\n      return;\n    }\n    /**\n     * Waits for the content to be ready before querying the scroll\n     * or the background content element.\n     */\n    componentOnReady(contentEl, async () => {\n      const customScrollTarget = contentEl.querySelector(ION_CONTENT_CLASS_SELECTOR);\n      /**\n       * Query the custom scroll target (if available), first. In refresher implementations,\n       * the ion-refresher element will always be a direct child of ion-content (slot=\"fixed\"). By\n       * querying the custom scroll target first and falling back to the ion-content element,\n       * the correct scroll element will be returned by the implementation.\n       */\n      this.scrollEl = await getScrollElement(customScrollTarget !== null && customScrollTarget !== void 0 ? customScrollTarget : contentEl);\n      /**\n       * Query the background content element from the host ion-content element directly.\n       */\n      this.backgroundContentEl = await contentEl.getBackgroundElement();\n      if (await shouldUseNativeRefresher(this.el, getIonMode(this))) {\n        this.setupNativeRefresher(contentEl);\n      }\n      else {\n        this.gesture = (await import('./index2.js')).createGesture({\n          el: contentEl,\n          gestureName: 'refresher',\n          gesturePriority: 31,\n          direction: 'y',\n          threshold: 20,\n          passive: false,\n          canStart: () => this.canStart(),\n          onStart: () => this.onStart(),\n          onMove: (ev) => this.onMove(ev),\n          onEnd: () => this.onEnd(),\n        });\n        this.disabledChanged();\n      }\n    });\n  }\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true;\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* RefresherState.Completing */)));\n      }\n    }\n    else {\n      this.close(32 /* RefresherState.Completing */, '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* RefresherState.Cancelling */)));\n      }\n    }\n    else {\n      this.close(16 /* RefresherState.Cancelling */, '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n    if (this.state !== 1 /* RefresherState.Inactive */) {\n      return false;\n    }\n    // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n    return true;\n  }\n  onStart() {\n    this.progress = 0;\n    this.state = 1 /* RefresherState.Inactive */;\n  }\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    }\n    // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n    const ev = detail.event;\n    if (ev.touches !== undefined && ev.touches.length > 1) {\n      return;\n    }\n    // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n    if ((this.state & 56 /* RefresherState._BUSY_ */) !== 0) {\n      return;\n    }\n    const pullFactor = Number.isNaN(this.pullFactor) || this.pullFactor < 0 ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor;\n    // don't bother if they're scrolling up\n    // and have not already started dragging\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1 /* RefresherState.Inactive */;\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n      return;\n    }\n    if (this.state === 1 /* RefresherState.Inactive */) {\n      // this refresh is not already actively pulling down\n      // get the content's scrollTop\n      const scrollHostScrollTop = this.scrollEl.scrollTop;\n      // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n      if (scrollHostScrollTop > 0) {\n        this.progress = 0;\n        return;\n      }\n      // content scrolled all the way to the top, and dragging down\n      this.state = 2 /* RefresherState.Pulling */;\n    }\n    // prevent native scroll events\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n    // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n    this.setCss(deltaY, '0ms', true, '');\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n    const pullMin = this.pullMin;\n    // set pull progress\n    this.progress = deltaY / pullMin;\n    // emit \"start\" if it hasn't started yet\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    }\n    // emit \"pulling\" on every move\n    this.ionPull.emit();\n    // do nothing if the delta is less than the pull threshold\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2 /* RefresherState.Pulling */;\n      return;\n    }\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    }\n    // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n    this.state = 4 /* RefresherState.Ready */;\n    return;\n  }\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4 /* RefresherState.Ready */) {\n      // they pulled down far enough, so it's ready to refresh\n      this.beginRefresh();\n    }\n    else if (this.state === 2 /* RefresherState.Pulling */) {\n      // they were pulling down, but didn't pull down far enough\n      // set the content back to it's original location\n      // and close the refresher\n      // set that the refresh is actively cancelling\n      this.cancel();\n    }\n  }\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8 /* RefresherState.Refreshing */;\n    // place the content in a hangout position while it thinks\n    this.setCss(this.pullMin, this.snapbackDuration, true, '');\n    // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this),\n    });\n  }\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1 /* RefresherState.Inactive */;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600);\n    // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay);\n  }\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n    this.appliedStyles = y > 0;\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = y > 0 ? `translateY(${y}px) translateZ(0px)` : '';\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = overflowVisible ? 'hidden' : '';\n      }\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { slot: \"fixed\", class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1 /* RefresherState.Inactive */,\n        'refresher-pulling': this.state === 2 /* RefresherState.Pulling */,\n        'refresher-ready': this.state === 4 /* RefresherState.Ready */,\n        'refresher-refreshing': this.state === 8 /* RefresherState.Refreshing */,\n        'refresher-cancelling': this.state === 16 /* RefresherState.Cancelling */,\n        'refresher-completing': this.state === 32 /* RefresherState.Completing */,\n      } }));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n  static get style() { return {\n    ios: refresherIosCss,\n    md: refresherMdCss\n  }; }\n}, [32, \"ion-refresher\", {\n    \"pullMin\": [2, \"pull-min\"],\n    \"pullMax\": [2, \"pull-max\"],\n    \"closeDuration\": [1, \"close-duration\"],\n    \"snapbackDuration\": [1, \"snapback-duration\"],\n    \"pullFactor\": [2, \"pull-factor\"],\n    \"disabled\": [4],\n    \"nativeRefresher\": [32],\n    \"state\": [32],\n    \"complete\": [64],\n    \"cancel\": [64],\n    \"getProgress\": [64]\n  }]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-refresher\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-refresher\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Refresher);\n      }\n      break;\n  } });\n}\n\nconst IonRefresher = Refresher;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonRefresher, defineCustomElement };\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,kBAAkB,EAAEC,WAAW,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,CAAC,EAAEC,IAAI,QAAQ,+BAA+B;AAC1H,SAASC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,UAAU,QAAQ,mBAAmB;AACpE,SAASC,CAAC,IAAIC,uBAAuB,QAAQ,mBAAmB;AAChE,SAASC,CAAC,IAAIC,4BAA4B,EAAEC,CAAC,IAAIC,uBAAuB,EAAEP,CAAC,IAAIQ,0BAA0B,EAAEN,CAAC,IAAIO,gBAAgB,QAAQ,aAAa;AACrJ,SAASC,CAAC,IAAIC,kBAAkB,EAAEC,CAAC,IAAIC,gBAAgB,EAAEjB,CAAC,IAAIkB,KAAK,EAAEZ,CAAC,IAAIa,cAAc,EAAEC,CAAC,IAAIC,GAAG,QAAQ,cAAc;AACxH,SAASrB,CAAC,IAAIsB,YAAY,QAAQ,aAAa;AAC/C,SAASN,CAAC,IAAIO,eAAe,QAAQ,gBAAgB;AAErD,MAAMC,yBAAyB,GAAIC,SAAS,IAAK;EAC/C,MAAMC,eAAe,GAAGD,SAAS,CAACE,sBAAsB;EACxD,MAAMC,SAAS,GAAGF,eAAe,KAAK,IAAI,IAAIA,eAAe,CAACG,OAAO,KAAK,YAAY;EACtF,OAAOD,SAAS,GAAG,WAAW,GAAG,OAAO;AAC1C,CAAC;AACD,MAAME,sBAAsB,GAAG,CAACC,IAAI,EAAEC,cAAc,EAAEC,WAAW,KAAK;EACpE,OAAOF,IAAI,KAAK,OAAO,GACnBG,oBAAoB,CAACF,cAAc,EAAEC,WAAW,CAAC,GACjDE,wBAAwB,CAACH,cAAc,EAAEC,WAAW,CAAC;AAC3D,CAAC;AACD,MAAMG,mBAAmB,GAAIC,oBAAoB,IAAK;EACpD,MAAMC,OAAO,GAAGD,oBAAoB,CAACE,aAAa,CAAC,aAAa,CAAC;EACjE,MAAMC,MAAM,GAAGF,OAAO,CAACG,UAAU,CAACF,aAAa,CAAC,QAAQ,CAAC;EACzD,MAAMG,qBAAqB,GAAGL,oBAAoB,CAACE,aAAa,CAAC,0BAA0B,CAAC;EAC5F,MAAMI,cAAc,GAAGN,oBAAoB,CAACE,aAAa,CAAC,kBAAkB,CAAC;EAC7E,MAAMK,KAAK,GAAGD,cAAc,GAAGA,cAAc,CAACJ,aAAa,CAAC,UAAU,CAAC,GAAG,IAAI;EAC9E,MAAMM,aAAa,GAAGtB,eAAe,EAAE,CAACuB,QAAQ,CAAC,IAAI,CAAC,CAACC,MAAM,CAAC,UAAU,CAAC;EACzE,MAAMC,8BAA8B,GAAGzB,eAAe,EAAE,CACrD0B,UAAU,CAACP,qBAAqB,CAAC,CACjCQ,SAAS,CAAC,CACX;IAAEC,MAAM,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAM,CAAC,EAC7B;IAAED,MAAM,EAAE,IAAI;IAAEC,OAAO,EAAE;EAAM,CAAC,EAChC;IAAED,MAAM,EAAE,IAAI;IAAEC,OAAO,EAAE;EAAI,CAAC,EAC9B;IAAED,MAAM,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAI,CAAC,CAC5B,CAAC;EACF,MAAMC,oBAAoB,GAAG9B,eAAe,EAAE,CAC3C0B,UAAU,CAACT,MAAM,CAAC,CAClBU,SAAS,CAAC,CACX;IAAEC,MAAM,EAAE,CAAC;IAAEG,eAAe,EAAE;EAAa,CAAC,EAC5C;IAAEH,MAAM,EAAE,GAAG;IAAEG,eAAe,EAAE;EAAa,CAAC,EAC9C;IAAEH,MAAM,EAAE,IAAI;IAAEG,eAAe,EAAE;EAAe,CAAC,EACjD;IAAEH,MAAM,EAAE,CAAC;IAAEG,eAAe,EAAE;EAAe,CAAC,CAC/C,CAAC;EACF,MAAMC,oBAAoB,GAAGhC,eAAe,EAAE,CAC3C0B,UAAU,CAACX,OAAO,CAAC,CACnBY,SAAS,CAAC,CACX;IAAEC,MAAM,EAAE,CAAC;IAAEK,SAAS,EAAE;EAAiB,CAAC,EAC1C;IAAEL,MAAM,EAAE,CAAC;IAAEK,SAAS,EAAE;EAAiB,CAAC,CAC3C,CAAC;EACF;AACF;AACA;AACA;AACA;EACE,IAAIb,cAAc,IAAIC,KAAK,EAAE;IAC3B,MAAMa,uBAAuB,GAAGlC,eAAe,EAAE,CAC9C0B,UAAU,CAACN,cAAc,CAAC,CAC1BO,SAAS,CAAC,CACX;MAAEC,MAAM,EAAE,CAAC;MAAEK,SAAS,EAAE;IAAe,CAAC,EACxC;MAAEL,MAAM,EAAE,GAAG;MAAEK,SAAS,EAAE;IAAe,CAAC,EAC1C;MAAEL,MAAM,EAAE,IAAI;MAAEK,SAAS,EAAE;IAAiB,CAAC,EAC7C;MAAEL,MAAM,EAAE,CAAC;MAAEK,SAAS,EAAE;IAAiB,CAAC,CAC3C,CAAC;IACF,MAAME,cAAc,GAAGnC,eAAe,EAAE,CACrC0B,UAAU,CAACL,KAAK,CAAC,CACjBM,SAAS,CAAC,CACX;MAAEC,MAAM,EAAE,CAAC;MAAEK,SAAS,EAAE;IAA2B,CAAC,EACpD;MAAEL,MAAM,EAAE,GAAG;MAAEK,SAAS,EAAE;IAA2B,CAAC,EACtD;MAAEL,MAAM,EAAE,IAAI;MAAEK,SAAS,EAAE;IAA8B,CAAC,EAC1D;MAAEL,MAAM,EAAE,CAAC;MAAEK,SAAS,EAAE;IAA8B,CAAC,CACxD,CAAC;IACFX,aAAa,CAACc,YAAY,CAAC,CAACF,uBAAuB,EAAEC,cAAc,CAAC,CAAC;EACvE;EACA,OAAOb,aAAa,CAACc,YAAY,CAAC,CAACX,8BAA8B,EAAEK,oBAAoB,EAAEE,oBAAoB,CAAC,CAAC;AACjH,CAAC;AACD,MAAMrB,oBAAoB,GAAG,CAACG,oBAAoB,EAAEJ,WAAW,KAAK;EAClE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAM2B,MAAM,GAAG3B,WAAW,CAAC4B,YAAY;EACvC,MAAMC,gBAAgB,GAAGvC,eAAe,EAAE,CACvC0B,UAAU,CAACZ,oBAAoB,CAAC,CAChCa,SAAS,CAAC,CACX;IAAEC,MAAM,EAAE,CAAC;IAAEK,SAAS,EAAG,wBAAuBI,MAAO;EAAK,CAAC,EAC7D;IAAET,MAAM,EAAE,CAAC;IAAEK,SAAS,EAAE;EAA6B,CAAC,CACvD,CAAC;EACF,OAAOpB,mBAAmB,CAACC,oBAAoB,CAAC,CAACsB,YAAY,CAAC,CAACG,gBAAgB,CAAC,CAAC;AACnF,CAAC;AACD,MAAM3B,wBAAwB,GAAG,CAACE,oBAAoB,EAAEJ,WAAW,KAAK;EACtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAM2B,MAAM,GAAG3B,WAAW,CAAC4B,YAAY;EACvC,MAAMC,gBAAgB,GAAGvC,eAAe,EAAE,CACvC0B,UAAU,CAACZ,oBAAoB,CAAC,CAChCa,SAAS,CAAC,CACX;IAAEC,MAAM,EAAE,CAAC;IAAEK,SAAS,EAAG,eAAcI,MAAO;EAAK,CAAC,EACpD;IAAET,MAAM,EAAE,CAAC;IAAEK,SAAS,EAAE;EAAoB,CAAC,CAC9C,CAAC;EACF,OAAOpB,mBAAmB,CAACC,oBAAoB,CAAC,CAACsB,YAAY,CAAC,CAACG,gBAAgB,CAAC,CAAC;AACnF,CAAC;AACD,MAAMC,uBAAuB,GAAI1B,oBAAoB,IAAK;EACxD,OAAOd,eAAe,EAAE,CACrBuB,QAAQ,CAAC,GAAG,CAAC,CACbG,UAAU,CAACZ,oBAAoB,CAAC,CAChC2B,MAAM,CAAC,WAAW,EAAE,2DAA2D,EAAE,iBAAiB,CAAC;AACxG,CAAC;AACD;AACA;AACA,MAAMC,iBAAiB,GAAG,CAAC3B,OAAO,EAAEc,OAAO,KAAK;EAC9Cd,OAAO,CAAC4B,KAAK,CAACC,WAAW,CAAC,SAAS,EAAEf,OAAO,CAACgB,QAAQ,EAAE,CAAC;AAC1D,CAAC;AACD,MAAMC,wBAAwB,GAAG,CAACC,KAAK,EAAEC,QAAQ,EAAEC,UAAU,KAAK;EAChE,MAAMC,GAAG,GAAG,CAAC;EACb9E,SAAS,CAAC,MAAM;IACd2E,KAAK,CAACI,OAAO,CAAC,CAACC,EAAE,EAAEC,CAAC,KAAK;MACvB;AACN;AACA;AACA;AACA;AACA;MACM,MAAMC,GAAG,GAAGD,CAAC,IAAIH,GAAG,GAAGF,QAAQ,CAAC;MAChC,MAAMO,KAAK,GAAGL,GAAG,GAAGI,GAAG;MACvB,MAAME,KAAK,GAAGP,UAAU,GAAGK,GAAG;MAC9B,MAAMG,WAAW,GAAG9D,KAAK,CAAC,CAAC,EAAE6D,KAAK,GAAGD,KAAK,EAAE,CAAC,CAAC;MAC9CH,EAAE,CAACT,KAAK,CAACC,WAAW,CAAC,SAAS,EAAEa,WAAW,CAACZ,QAAQ,EAAE,CAAC;IACzD,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AACD,MAAMa,2BAA2B,GAAG,CAAC3C,OAAO,EAAE4C,aAAa,KAAK;EAC9DvF,SAAS,CAAC,MAAM;IACd;IACA2C,OAAO,CAAC4B,KAAK,CAACC,WAAW,CAAC,gCAAgC,EAAEe,aAAa,IAAI,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC;IACjG5C,OAAO,CAAC4B,KAAK,CAACC,WAAW,CAAC,SAAS,EAAE,GAAG,CAAC;EAC3C,CAAC,CAAC;AACJ,CAAC;AACD,MAAMgB,gBAAgB,GAAG,UAACR,EAAE,EAAES,KAAK,EAAqB;EAAA,IAAnBtC,QAAQ,uEAAG,GAAG;EACjD,IAAI,CAAC6B,EAAE,EAAE;IACP,OAAOU,OAAO,CAACC,OAAO,EAAE;EAC1B;EACA,MAAMC,KAAK,GAAGxE,kBAAkB,CAAC4D,EAAE,EAAE7B,QAAQ,CAAC;EAC9CnD,SAAS,CAAC,MAAM;IACdgF,EAAE,CAACT,KAAK,CAACC,WAAW,CAAC,YAAY,EAAG,GAAErB,QAAS,iBAAgB,CAAC;IAChE,IAAIsC,KAAK,KAAKI,SAAS,EAAE;MACvBb,EAAE,CAACT,KAAK,CAACuB,cAAc,CAAC,WAAW,CAAC;IACtC,CAAC,MACI;MACHd,EAAE,CAACT,KAAK,CAACC,WAAW,CAAC,WAAW,EAAG,oBAAmBiB,KAAM,QAAO,CAAC;IACtE;EACF,CAAC,CAAC;EACF,OAAOG,KAAK;AACd,CAAC;AACD;AACA;AACA,MAAMG,wBAAwB,GAAG,OAAOC,WAAW,EAAEC,IAAI,KAAK;EAC5D,MAAMC,gBAAgB,GAAGF,WAAW,CAACpD,aAAa,CAAC,uBAAuB,CAAC;EAC3E,IAAI,CAACsD,gBAAgB,EAAE;IACrB,OAAOR,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC;EAC/B;EACA,MAAM,IAAID,OAAO,CAAEC,OAAO,IAAKrE,gBAAgB,CAAC4E,gBAAgB,EAAEP,OAAO,CAAC,CAAC;EAC3E,MAAMtD,cAAc,GAAG2D,WAAW,CAACpD,aAAa,CAAC,sDAAsD,CAAC;EACxG,MAAMuD,iBAAiB,GAAGH,WAAW,CAACpD,aAAa,CAAC,yDAAyD,CAAC;EAC9G,OAAQP,cAAc,KAAK,IAAI,IAC7B8D,iBAAiB,KAAK,IAAI,KACxBF,IAAI,KAAK,KAAK,IAAIzF,UAAU,CAAC,QAAQ,CAAC,IAAIwF,WAAW,CAACzB,KAAK,CAAC6B,uBAAuB,KAAKP,SAAS,IACjGI,IAAI,KAAK,IAAI,CAAC;AACpB,CAAC;AAED,MAAMI,eAAe,GAAG,ijKAAijK;AAEzkK,MAAMC,cAAc,GAAG,28KAA28K;AAEl+K,MAAMC,SAAS,GAAG,aAActG,kBAAkB,CAAC,cAAcC,WAAW,CAAC;EAC3EsG,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,UAAU,GAAGvG,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;IACpD,IAAI,CAACwG,OAAO,GAAGxG,WAAW,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;IAC9C,IAAI,CAACyG,QAAQ,GAAGzG,WAAW,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;IAChD,IAAI,CAAC0G,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAAC3B,aAAa,GAAG,CAAC;IACtB,IAAI,CAAC4B,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,eAAe,GAAG,KAAK;IAC5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IACf;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAG,IAAI,CAACD,OAAO,GAAG,EAAE;IAChC;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACE,aAAa,GAAG,OAAO;IAC5B;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACC,gBAAgB,GAAG,OAAO;IAC/B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB;AACJ;AACA;IACI,IAAI,CAACC,QAAQ,GAAG,KAAK;EACvB;EACAC,eAAe,GAAG;IAChB,IAAI,IAAI,CAACC,OAAO,EAAE;MAChB,IAAI,CAACA,OAAO,CAACC,MAAM,CAAC,CAAC,IAAI,CAACH,QAAQ,CAAC;IACrC;EACF;EACA,MAAMI,oBAAoB,GAAG;IAC3B,MAAMC,kBAAkB,GAAG,MAAMjC,wBAAwB,CAAC,IAAI,CAACf,EAAE,EAAEtE,UAAU,CAAC,IAAI,CAAC,CAAC;IACpF,IAAIsH,kBAAkB,IAAI,CAAC,IAAI,CAACZ,eAAe,EAAE;MAC/C,MAAMtF,SAAS,GAAG,IAAI,CAACkD,EAAE,CAACiD,OAAO,CAAC,aAAa,CAAC;MAChD,IAAI,CAACC,oBAAoB,CAACpG,SAAS,CAAC;IACtC,CAAC,MACI,IAAI,CAACkG,kBAAkB,EAAE;MAC5B,IAAI,CAACG,sBAAsB,EAAE;IAC/B;EACF;EACAA,sBAAsB,GAAG;IACvB,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACC,sBAAsB,EAAE;MAChD,IAAI,CAACD,QAAQ,CAACE,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACD,sBAAsB,CAAC;MACxE,IAAI,CAACA,sBAAsB,GAAGxC,SAAS;IACzC;IACA,IAAI,CAACuB,eAAe,GAAG,KAAK;EAC9B;EACA,MAAMmB,oBAAoB,CAACvD,EAAE,EAAEqC,KAAK,EAAE;IACpC,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI3G,UAAU,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE;MAC9B,MAAM8E,gBAAgB,CAACR,EAAE,EAAEa,SAAS,EAAE,GAAG,CAAC;IAC5C,CAAC,MACI;MACH,MAAMzE,kBAAkB,CAAC,IAAI,CAAC4D,EAAE,CAACpC,aAAa,CAAC,4BAA4B,CAAC,EAAE,GAAG,CAAC;IACpF;IACA,IAAI,CAACsE,UAAU,GAAG,KAAK;IACvB,IAAI,CAACD,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACD,WAAW,GAAG,KAAK;IACxB,IAAI,CAACG,UAAU,CAACpC,OAAO,CAAEyD,GAAG,IAAKA,GAAG,CAACC,OAAO,EAAE,CAAC;IAC/C,IAAI,CAACtB,UAAU,GAAG,EAAE;IACpB,IAAI,CAACJ,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACM,KAAK,GAAG,CAAC,CAAC;EACjB;;EACA,MAAMqB,uBAAuB,CAACrG,cAAc,EAAE8D,iBAAiB,EAAE;IAC/D,IAAI,CAACwC,kBAAkB,GAAG,IAAI,CAACP,QAAQ;IACvC,MAAMzD,KAAK,GAAGtC,cAAc,CAACS,UAAU,CAAC8F,gBAAgB,CAAC,KAAK,CAAC;IAC/D,IAAIC,QAAQ,GAAG,IAAI,CAACT,QAAQ,CAAClE,YAAY,GAAG,IAAI;IAChD,MAAM4E,SAAS,GAAGnE,KAAK,CAACoE,MAAM;IAC9B/I,SAAS,CAAC,MAAM2E,KAAK,CAACI,OAAO,CAAEC,EAAE,IAAKA,EAAE,CAACT,KAAK,CAACC,WAAW,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC;IACjF,IAAI,CAAC6D,sBAAsB,GAAG,MAAM;MAClC;MACA,IAAI,CAAC,IAAI,CAACrB,WAAW,IAAI,IAAI,CAACK,KAAK,KAAK,CAAC,CAAC,+BAA+B;QACvE;MACF;MACAjH,QAAQ,CAAC,MAAM;QACb;QACA,MAAM4I,SAAS,GAAG,IAAI,CAACZ,QAAQ,CAACY,SAAS;QACzC,MAAMC,eAAe,GAAG,IAAI,CAACjE,EAAE,CAACd,YAAY;QAC5C,IAAI8E,SAAS,GAAG,CAAC,EAAE;UACjB;AACV;AACA;AACA;UACU,IAAI,IAAI,CAAC3B,KAAK,KAAK,CAAC,CAAC,iCAAiC;YACpD,MAAM6B,KAAK,GAAG3H,KAAK,CAAC,CAAC,EAAEyH,SAAS,IAAIC,eAAe,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YAC9DjJ,SAAS,CAAC,MAAMsE,iBAAiB,CAAC6B,iBAAiB,EAAE,CAAC,GAAG+C,KAAK,CAAC,CAAC;YAChE;UACF;UACA;QACF;QACA,IAAI,IAAI,CAAClC,WAAW,EAAE;UACpB,IAAI,CAAC,IAAI,CAACF,QAAQ,EAAE;YAClB,IAAI,CAACA,QAAQ,GAAG,IAAI;YACpB,IAAI,CAACF,QAAQ,CAACuC,IAAI,EAAE;UACtB;UACA;UACA,IAAI,IAAI,CAACnC,WAAW,EAAE;YACpB,IAAI,CAACL,OAAO,CAACwC,IAAI,EAAE;UACrB;QACF;QACA;AACR;AACA;AACA;AACA;AACA;AACA;QACQ,MAAM3F,MAAM,GAAG,IAAI,CAACsD,QAAQ,GAAG,EAAE,GAAG,CAAC;QACrC,MAAMjC,UAAU,GAAI,IAAI,CAACkC,QAAQ,GAAGxF,KAAK,CAAC,CAAC,EAAE,CAAC6H,IAAI,CAACC,GAAG,CAACL,SAAS,CAAC,GAAGxF,MAAM,IAAIqF,QAAQ,EAAE,CAAC,CAAE;QAC3F,MAAMS,2BAA2B,GAAG,IAAI,CAACjC,KAAK,KAAK,CAAC,CAAC,mCAAmCxC,UAAU,KAAK,CAAC;QACxG,IAAIyE,2BAA2B,EAAE;UAC/B,IAAI,IAAI,CAACtC,WAAW,EAAE;YACpB1B,2BAA2B,CAACa,iBAAiB,EAAE,IAAI,CAACZ,aAAa,CAAC;UACpE;UACA,IAAI,CAAC,IAAI,CAAC2B,UAAU,EAAE;YACpB,IAAI,CAACqC,YAAY,EAAE;YACnB,IAAI,CAACrC,UAAU,GAAG,IAAI;YACtBvF,YAAY,CAAC;cAAE4C,KAAK,EAAE;YAAQ,CAAC,CAAC;YAChC;AACZ;AACA;AACA;YACY,IAAI,CAAC,IAAI,CAACyC,WAAW,EAAE;cACrBxB,gBAAgB,CAAC,IAAI,CAACmD,kBAAkB,EAAG,GAAEM,eAAgB,IAAG,CAAC;YACnE;UACF;QACF,CAAC,MACI;UACH,IAAI,CAAC5B,KAAK,GAAG,CAAC,CAAC;UACf3C,wBAAwB,CAACC,KAAK,EAAEmE,SAAS,EAAEjE,UAAU,CAAC;QACxD;MACF,CAAC,CAAC;IACJ,CAAC;IACD,IAAI,CAACuD,QAAQ,CAACoB,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACnB,sBAAsB,CAAC;IACrE,IAAI,CAACR,OAAO,GAAG,CAAC,MAAM,MAAM,CAAC,aAAa,CAAC,EAAE4B,aAAa,CAAC;MACzDzE,EAAE,EAAE,IAAI,CAACoD,QAAQ;MACjBsB,WAAW,EAAE,WAAW;MACxBC,eAAe,EAAE,EAAE;MACnBC,SAAS,EAAE,GAAG;MACdC,SAAS,EAAE,CAAC;MACZC,OAAO,EAAE,MAAM;QACb,IAAI,CAAC9C,WAAW,GAAG,IAAI;QACvB,IAAI,CAAC,IAAI,CAACE,UAAU,EAAE;UACpB1B,gBAAgB,CAAC,IAAI,CAACmD,kBAAkB,EAAE,KAAK,CAAC;QAClD;QACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,IAAIE,QAAQ,KAAK,CAAC,EAAE;UAClBA,QAAQ,GAAG,IAAI,CAACT,QAAQ,CAAClE,YAAY,GAAG,IAAI;QAC9C;MACF,CAAC;MACD6F,MAAM,EAAGC,EAAE,IAAK;QACd,IAAI,CAACzE,aAAa,GAAGyE,EAAE,CAACC,SAAS;MACnC,CAAC;MACDC,KAAK,EAAE,MAAM;QACX,IAAI,CAAClD,WAAW,GAAG,KAAK;QACxB,IAAI,CAACF,QAAQ,GAAG,KAAK;QACrB,IAAI,IAAI,CAACG,eAAe,EAAE;UACxB,IAAI,CAACsB,oBAAoB,CAAC,IAAI,CAACI,kBAAkB,EAAE,EAAE,CAAC,gCAAgC;UACtF,IAAI,CAAC1B,eAAe,GAAG,KAAK;QAC9B,CAAC,MACI,IAAI,IAAI,CAACC,UAAU,EAAE;UACxB9G,QAAQ,CAAC,MAAMoF,gBAAgB,CAAC,IAAI,CAACmD,kBAAkB,EAAG,GAAE,IAAI,CAAC3D,EAAE,CAACd,YAAa,IAAG,CAAC,CAAC;QACxF;MACF;IACF,CAAC,CAAC;IACF,IAAI,CAAC0D,eAAe,EAAE;EACxB;EACA,MAAMuC,sBAAsB,CAACrI,SAAS,EAAEO,cAAc,EAAE8D,iBAAiB,EAAE;IACzE,MAAMtD,MAAM,GAAGrB,cAAc,CAACa,cAAc,CAAC,CAACO,aAAa,CAAC,QAAQ,CAAC;IACrE,MAAMF,oBAAoB,GAAG,IAAI,CAACsC,EAAE,CAACpC,aAAa,CAAC,+CAA+C,CAAC;IACnG,MAAMwH,gBAAgB,GAAG5I,cAAc,CAAC2E,iBAAiB,CAAC,CAACvD,aAAa,CAAC,QAAQ,CAAC;IAClF,IAAIC,MAAM,KAAK,IAAI,IAAIuH,gBAAgB,KAAK,IAAI,EAAE;MAChDpK,SAAS,CAAC,MAAM;QACd6C,MAAM,CAAC0B,KAAK,CAACC,WAAW,CAAC,WAAW,EAAE,MAAM,CAAC;QAC7C;QACA2B,iBAAiB,CAAC5B,KAAK,CAACC,WAAW,CAAC,iBAAiB,EAAE,QAAQ,CAAC;QAChE4F,gBAAgB,CAAC7F,KAAK,CAACC,WAAW,CAAC,iBAAiB,EAAE,QAAQ,CAAC;MACjE,CAAC,CAAC;IACJ;IACA,IAAI,CAACqD,OAAO,GAAG,CAAC,MAAM,MAAM,CAAC,aAAa,CAAC,EAAE4B,aAAa,CAAC;MACzDzE,EAAE,EAAE,IAAI,CAACoD,QAAQ;MACjBsB,WAAW,EAAE,WAAW;MACxBC,eAAe,EAAE,EAAE;MACnBC,SAAS,EAAE,GAAG;MACdC,SAAS,EAAE,CAAC;MACZQ,QAAQ,EAAE,MAAM,IAAI,CAAChD,KAAK,KAAK,CAAC,CAAC,mCAC/B,IAAI,CAACA,KAAK,KAAK,EAAE,CAAC,mCAClB,IAAI,CAACe,QAAQ,CAACY,SAAS,KAAK,CAAC;MAC/Bc,OAAO,EAAGE,EAAE,IAAK;QACf,IAAI,CAACjD,QAAQ,GAAG,CAAC;QACjBiD,EAAE,CAACM,IAAI,GAAG;UAAEC,SAAS,EAAE1E,SAAS;UAAEiB,QAAQ,EAAE,KAAK;UAAE0D,SAAS,EAAE;QAAM,CAAC;MACvE,CAAC;MACDT,MAAM,EAAGC,EAAE,IAAK;QACd,IAAKA,EAAE,CAACC,SAAS,GAAG,CAAC,IAAI,IAAI,CAAClD,QAAQ,KAAK,CAAC,IAAI,CAACiD,EAAE,CAACM,IAAI,CAACxD,QAAQ,IAAKkD,EAAE,CAACM,IAAI,CAACE,SAAS,EAAE;UACvFR,EAAE,CAACM,IAAI,CAACE,SAAS,GAAG,IAAI;UACxB;QACF;QACA,IAAI,CAACR,EAAE,CAACM,IAAI,CAACxD,QAAQ,EAAE;UACrBkD,EAAE,CAACM,IAAI,CAACxD,QAAQ,GAAG,IAAI;UACvB,IAAI,CAACO,KAAK,GAAG,CAAC,CAAC;UACfrH,SAAS,CAAC,MAAM,IAAI,CAACoI,QAAQ,CAAC7D,KAAK,CAACC,WAAW,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;UACxE,MAAMiG,aAAa,GAAG5I,yBAAyB,CAACC,SAAS,CAAC;UAC1D,MAAMyI,SAAS,GAAGpI,sBAAsB,CAACsI,aAAa,EAAE/H,oBAAoB,EAAE,IAAI,CAACsC,EAAE,CAAC;UACtFgF,EAAE,CAACM,IAAI,CAACC,SAAS,GAAGA,SAAS;UAC7BA,SAAS,CAACG,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC;UACjC,IAAI,CAAC9D,QAAQ,CAACuC,IAAI,EAAE;UACpB,IAAI,CAAChC,UAAU,CAACwD,IAAI,CAACJ,SAAS,CAAC;UAC/B;QACF;QACA;QACA,IAAI,CAACxD,QAAQ,GAAGxF,KAAK,CAAC,CAAC,EAAGyI,EAAE,CAACY,MAAM,GAAG,GAAG,GAAI,GAAG,EAAE,CAAC,CAAC;QACpDZ,EAAE,CAACM,IAAI,CAACC,SAAS,CAACM,YAAY,CAAC,IAAI,CAAC9D,QAAQ,CAAC;QAC7C,IAAI,CAACJ,OAAO,CAACwC,IAAI,EAAE;MACrB,CAAC;MACDe,KAAK,EAAGF,EAAE,IAAK;QACb,IAAI,CAACA,EAAE,CAACM,IAAI,CAACxD,QAAQ,EAAE;UACrB;QACF;QACA,IAAI,CAACe,OAAO,CAACC,MAAM,CAAC,KAAK,CAAC;QAC1B9H,SAAS,CAAC,MAAM,IAAI,CAACoI,QAAQ,CAAC7D,KAAK,CAACuB,cAAc,CAAC,YAAY,CAAC,CAAC;QACjE,IAAI,IAAI,CAACiB,QAAQ,IAAI,GAAG,EAAE;UACxBiD,EAAE,CAACM,IAAI,CAACC,SAAS,CAACO,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC/D,QAAQ,EAAE,GAAG,CAAC,CAACgE,QAAQ,CAAC,MAAM;YAClE,IAAI,CAAC5D,UAAU,CAACpC,OAAO,CAAEyD,GAAG,IAAKA,GAAG,CAACC,OAAO,EAAE,CAAC;YAC/C,IAAI,CAACtB,UAAU,GAAG,EAAE;YACpB,IAAI,CAACU,OAAO,CAACC,MAAM,CAAC,IAAI,CAAC;YACzB,IAAI,CAACT,KAAK,GAAG,CAAC,CAAC;UACjB,CAAC,CAAC;;UACF;QACF;QACA,MAAMN,QAAQ,GAAGnG,uBAAuB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAACmG,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC1F,MAAMiE,iBAAiB,GAAG5G,uBAAuB,CAAC1B,oBAAoB,CAAC;QACvE,IAAI,CAACyE,UAAU,CAACwD,IAAI,CAACK,iBAAiB,CAAC;QACvChL,SAAS,CAAC,YAAY;UACpB0C,oBAAoB,CAAC6B,KAAK,CAACC,WAAW,CAAC,mCAAmC,EAAG,GAAEuC,QAAQ,GAAG,GAAI,IAAG,CAAC;UAClGiD,EAAE,CAACM,IAAI,CAACC,SAAS,CAACO,WAAW,EAAE;UAC/B,MAAME,iBAAiB,CAACC,IAAI,EAAE;UAC9B,IAAI,CAAC1B,YAAY,EAAE;UACnBS,EAAE,CAACM,IAAI,CAACC,SAAS,CAAC9B,OAAO,EAAE;UAC3B,IAAI,CAACZ,OAAO,CAACC,MAAM,CAAC,IAAI,CAAC;QAC3B,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IACF,IAAI,CAACF,eAAe,EAAE;EACxB;EACA,MAAMM,oBAAoB,CAACpG,SAAS,EAAE;IACpC,IAAI,IAAI,CAACuG,sBAAsB,IAAI,CAACvG,SAAS,IAAI,IAAI,CAACsF,eAAe,IAAI,CAAC,IAAI,CAACgB,QAAQ,EAAE;MACvF;IACF;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAAC8C,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC;IAC7B,IAAI,CAAC9D,eAAe,GAAG,IAAI;IAC3B,MAAM/E,cAAc,GAAG,IAAI,CAAC2C,EAAE,CAACpC,aAAa,CAAC,sDAAsD,CAAC;IACpG,MAAMuD,iBAAiB,GAAG,IAAI,CAACnB,EAAE,CAACpC,aAAa,CAAC,yDAAyD,CAAC;IAC1G,IAAIlC,UAAU,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE;MAC9B,IAAI,CAACgI,uBAAuB,CAACrG,cAAc,EAAE8D,iBAAiB,CAAC;IACjE,CAAC,MACI;MACH,IAAI,CAACgE,sBAAsB,CAACrI,SAAS,EAAEO,cAAc,EAAE8D,iBAAiB,CAAC;IAC3E;EACF;EACAgF,kBAAkB,GAAG;IACnB,IAAI,CAACpD,oBAAoB,EAAE;EAC7B;EACA,MAAMqD,iBAAiB,GAAG;IACxB,IAAI,IAAI,CAACpG,EAAE,CAACqG,YAAY,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;MAC5CC,OAAO,CAACC,KAAK,CAAC,iDAAiD,CAAC;MAChE;IACF;IACA,MAAMzJ,SAAS,GAAG,IAAI,CAACkD,EAAE,CAACiD,OAAO,CAACnH,4BAA4B,CAAC;IAC/D,IAAI,CAACgB,SAAS,EAAE;MACdd,uBAAuB,CAAC,IAAI,CAACgE,EAAE,CAAC;MAChC;IACF;IACA;AACJ;AACA;AACA;IACI1D,gBAAgB,CAACQ,SAAS,EAAE,YAAY;MACtC,MAAM0J,kBAAkB,GAAG1J,SAAS,CAACc,aAAa,CAAC3B,0BAA0B,CAAC;MAC9E;AACN;AACA;AACA;AACA;AACA;MACM,IAAI,CAACmH,QAAQ,GAAG,MAAMlH,gBAAgB,CAACsK,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,KAAK,KAAK,CAAC,GAAGA,kBAAkB,GAAG1J,SAAS,CAAC;MACrI;AACN;AACA;MACM,IAAI,CAAC2J,mBAAmB,GAAG,MAAM3J,SAAS,CAAC4J,oBAAoB,EAAE;MACjE,IAAI,MAAM3F,wBAAwB,CAAC,IAAI,CAACf,EAAE,EAAEtE,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE;QAC7D,IAAI,CAACwH,oBAAoB,CAACpG,SAAS,CAAC;MACtC,CAAC,MACI;QACH,IAAI,CAAC+F,OAAO,GAAG,CAAC,MAAM,MAAM,CAAC,aAAa,CAAC,EAAE4B,aAAa,CAAC;UACzDzE,EAAE,EAAElD,SAAS;UACb4H,WAAW,EAAE,WAAW;UACxBC,eAAe,EAAE,EAAE;UACnBC,SAAS,EAAE,GAAG;UACdC,SAAS,EAAE,EAAE;UACb8B,OAAO,EAAE,KAAK;UACdtB,QAAQ,EAAE,MAAM,IAAI,CAACA,QAAQ,EAAE;UAC/BP,OAAO,EAAE,MAAM,IAAI,CAACA,OAAO,EAAE;UAC7BC,MAAM,EAAGC,EAAE,IAAK,IAAI,CAACD,MAAM,CAACC,EAAE,CAAC;UAC/BE,KAAK,EAAE,MAAM,IAAI,CAACA,KAAK;QACzB,CAAC,CAAC;QACF,IAAI,CAACtC,eAAe,EAAE;MACxB;IACF,CAAC,CAAC;EACJ;EACAgE,oBAAoB,GAAG;IACrB,IAAI,CAACzD,sBAAsB,EAAE;IAC7B,IAAI,CAACC,QAAQ,GAAGvC,SAAS;IACzB,IAAI,IAAI,CAACgC,OAAO,EAAE;MAChB,IAAI,CAACA,OAAO,CAACY,OAAO,EAAE;MACtB,IAAI,CAACZ,OAAO,GAAGhC,SAAS;IAC1B;EACF;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMgG,QAAQ,GAAG;IACf,IAAI,IAAI,CAACzE,eAAe,EAAE;MACxB,IAAI,CAACH,eAAe,GAAG,IAAI;MAC3B;MACA,IAAI,CAAC,IAAI,CAACD,WAAW,EAAE;QACrBtF,GAAG,CAAC,MAAMA,GAAG,CAAC,MAAM,IAAI,CAAC6G,oBAAoB,CAAC,IAAI,CAACI,kBAAkB,EAAE,EAAE,CAAC,gCAAgC,CAAC,CAAC;MAC9G;IACF,CAAC,MACI;MACH,IAAI,CAACmD,KAAK,CAAC,EAAE,CAAC,iCAAiC,OAAO,CAAC;IACzD;EACF;EACA;AACF;AACA;EACE,MAAMC,MAAM,GAAG;IACb,IAAI,IAAI,CAAC3E,eAAe,EAAE;MACxB;MACA,IAAI,CAAC,IAAI,CAACJ,WAAW,EAAE;QACrBtF,GAAG,CAAC,MAAMA,GAAG,CAAC,MAAM,IAAI,CAAC6G,oBAAoB,CAAC,IAAI,CAACI,kBAAkB,EAAE,EAAE,CAAC,gCAAgC,CAAC,CAAC;MAC9G;IACF,CAAC,MACI;MACH,IAAI,CAACmD,KAAK,CAAC,EAAE,CAAC,iCAAiC,EAAE,CAAC;IACpD;EACF;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEE,WAAW,GAAG;IACZ,OAAOtG,OAAO,CAACC,OAAO,CAAC,IAAI,CAACoB,QAAQ,CAAC;EACvC;EACAsD,QAAQ,GAAG;IACT,IAAI,CAAC,IAAI,CAACjC,QAAQ,EAAE;MAClB,OAAO,KAAK;IACd;IACA,IAAI,IAAI,CAACf,KAAK,KAAK,CAAC,CAAC,+BAA+B;MAClD,OAAO,KAAK;IACd;IACA;IACA;IACA,IAAI,IAAI,CAACe,QAAQ,CAACY,SAAS,GAAG,CAAC,EAAE;MAC/B,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb;EACAc,OAAO,GAAG;IACR,IAAI,CAAC/C,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACM,KAAK,GAAG,CAAC,CAAC;EACjB;;EACA0C,MAAM,CAACkC,MAAM,EAAE;IACb,IAAI,CAAC,IAAI,CAAC7D,QAAQ,EAAE;MAClB;IACF;IACA;IACA;IACA;IACA;IACA,MAAM4B,EAAE,GAAGiC,MAAM,CAACC,KAAK;IACvB,IAAIlC,EAAE,CAACmC,OAAO,KAAKtG,SAAS,IAAImE,EAAE,CAACmC,OAAO,CAACpD,MAAM,GAAG,CAAC,EAAE;MACrD;IACF;IACA;IACA;IACA;IACA,IAAI,CAAC,IAAI,CAAC1B,KAAK,GAAG,EAAE,CAAC,iCAAiC,CAAC,EAAE;MACvD;IACF;IACA,MAAMK,UAAU,GAAG0E,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC3E,UAAU,CAAC,IAAI,IAAI,CAACA,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAACA,UAAU;IAC7F,MAAMkD,MAAM,GAAGqB,MAAM,CAACrB,MAAM,GAAGlD,UAAU;IACzC;IACA;IACA,IAAIkD,MAAM,IAAI,CAAC,EAAE;MACf;MACA;MACA,IAAI,CAAC7D,QAAQ,GAAG,CAAC;MACjB,IAAI,CAACM,KAAK,GAAG,CAAC,CAAC;MACf,IAAI,IAAI,CAACR,aAAa,EAAE;QACtB;QACA,IAAI,CAACqE,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC;QAC7B;MACF;MACA;IACF;IACA,IAAI,IAAI,CAAC7D,KAAK,KAAK,CAAC,CAAC,+BAA+B;MAClD;MACA;MACA,MAAMiF,mBAAmB,GAAG,IAAI,CAAClE,QAAQ,CAACY,SAAS;MACnD;MACA;MACA,IAAIsD,mBAAmB,GAAG,CAAC,EAAE;QAC3B,IAAI,CAACvF,QAAQ,GAAG,CAAC;QACjB;MACF;MACA;MACA,IAAI,CAACM,KAAK,GAAG,CAAC,CAAC;IACjB;IACA;IACA,IAAI2C,EAAE,CAACuC,UAAU,EAAE;MACjBvC,EAAE,CAACwC,cAAc,EAAE;IACrB;IACA;IACA;IACA,IAAI,CAACtB,MAAM,CAACN,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC;IACpC,IAAIA,MAAM,KAAK,CAAC,EAAE;MAChB;MACA,IAAI,CAAC7D,QAAQ,GAAG,CAAC;MACjB;IACF;IACA,MAAMO,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B;IACA,IAAI,CAACP,QAAQ,GAAG6D,MAAM,GAAGtD,OAAO;IAChC;IACA,IAAI,CAAC,IAAI,CAACR,QAAQ,EAAE;MAClB,IAAI,CAACA,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACF,QAAQ,CAACuC,IAAI,EAAE;IACtB;IACA;IACA,IAAI,CAACxC,OAAO,CAACwC,IAAI,EAAE;IACnB;IACA,IAAIyB,MAAM,GAAGtD,OAAO,EAAE;MACpB;MACA,IAAI,CAACD,KAAK,GAAG,CAAC,CAAC;MACf;IACF;IACA,IAAIuD,MAAM,GAAG,IAAI,CAACrD,OAAO,EAAE;MACzB;MACA,IAAI,CAACgC,YAAY,EAAE;MACnB;IACF;IACA;IACA;IACA;IACA,IAAI,CAAClC,KAAK,GAAG,CAAC,CAAC;IACf;EACF;EACA6C,KAAK,GAAG;IACN;IACA,IAAI,IAAI,CAAC7C,KAAK,KAAK,CAAC,CAAC,4BAA4B;MAC/C;MACA,IAAI,CAACkC,YAAY,EAAE;IACrB,CAAC,MACI,IAAI,IAAI,CAAClC,KAAK,KAAK,CAAC,CAAC,8BAA8B;MACtD;MACA;MACA;MACA;MACA,IAAI,CAAC0E,MAAM,EAAE;IACf;EACF;EACAxC,YAAY,GAAG;IACb;IACA;IACA,IAAI,CAAClC,KAAK,GAAG,CAAC,CAAC;IACf;IACA,IAAI,CAAC6D,MAAM,CAAC,IAAI,CAAC5D,OAAO,EAAE,IAAI,CAACG,gBAAgB,EAAE,IAAI,EAAE,EAAE,CAAC;IAC1D;IACA;IACA,IAAI,CAACf,UAAU,CAACyC,IAAI,CAAC;MACnB0C,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAACY,IAAI,CAAC,IAAI;IACnC,CAAC,CAAC;EACJ;EACAX,KAAK,CAACzE,KAAK,EAAEqF,KAAK,EAAE;IAClB;IACAC,UAAU,CAAC,MAAM;MACf,IAAI,CAACtF,KAAK,GAAG,CAAC,CAAC;MACf,IAAI,CAACN,QAAQ,GAAG,CAAC;MACjB,IAAI,CAACD,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACoE,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;IAClC,CAAC,EAAE,GAAG,CAAC;IACP;IACA;IACA,IAAI,CAAC7D,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC6D,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC1D,aAAa,EAAE,IAAI,EAAEkF,KAAK,CAAC;EACjD;EACAxB,MAAM,CAAC0B,CAAC,EAAEzJ,QAAQ,EAAE0J,eAAe,EAAEH,KAAK,EAAE;IAC1C,IAAI,IAAI,CAACtF,eAAe,EAAE;MACxB;IACF;IACA,IAAI,CAACP,aAAa,GAAG+F,CAAC,GAAG,CAAC;IAC1B5M,SAAS,CAAC,MAAM;MACd,IAAI,IAAI,CAACoI,QAAQ,IAAI,IAAI,CAACqD,mBAAmB,EAAE;QAC7C,MAAMqB,WAAW,GAAG,IAAI,CAAC1E,QAAQ,CAAC7D,KAAK;QACvC,MAAMwI,eAAe,GAAG,IAAI,CAACtB,mBAAmB,CAAClH,KAAK;QACtDuI,WAAW,CAACjJ,SAAS,GAAGkJ,eAAe,CAAClJ,SAAS,GAAG+I,CAAC,GAAG,CAAC,GAAI,cAAaA,CAAE,qBAAoB,GAAG,EAAE;QACrGE,WAAW,CAACE,kBAAkB,GAAGD,eAAe,CAACC,kBAAkB,GAAG7J,QAAQ;QAC9E2J,WAAW,CAACG,eAAe,GAAGF,eAAe,CAACE,eAAe,GAAGP,KAAK;QACrEI,WAAW,CAACI,QAAQ,GAAGL,eAAe,GAAG,QAAQ,GAAG,EAAE;MACxD;IACF,CAAC,CAAC;EACJ;EACAM,MAAM,GAAG;IACP,MAAMlH,IAAI,GAAGvF,UAAU,CAAC,IAAI,CAAC;IAC7B,OAAQL,CAAC,CAACC,IAAI,EAAE;MAAE8M,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;QACpC,CAACpH,IAAI,GAAG,IAAI;QACZ;QACA,CAAE,aAAYA,IAAK,EAAC,GAAG,IAAI;QAC3B,kBAAkB,EAAE,IAAI,CAACmB,eAAe;QACxC,kBAAkB,EAAE,IAAI,CAACC,KAAK,KAAK,CAAC,CAAC;QACrC,mBAAmB,EAAE,IAAI,CAACA,KAAK,KAAK,CAAC,CAAC;QACtC,iBAAiB,EAAE,IAAI,CAACA,KAAK,KAAK,CAAC,CAAC;QACpC,sBAAsB,EAAE,IAAI,CAACA,KAAK,KAAK,CAAC,CAAC;QACzC,sBAAsB,EAAE,IAAI,CAACA,KAAK,KAAK,EAAE,CAAC;QAC1C,sBAAsB,EAAE,IAAI,CAACA,KAAK,KAAK,EAAE,CAAC;MAC5C;IAAE,CAAC,CAAC;EACR;;EACA,IAAIrC,EAAE,GAAG;IAAE,OAAO,IAAI;EAAE;EACxB,WAAWsI,QAAQ,GAAG;IAAE,OAAO;MAC7B,UAAU,EAAE,CAAC,iBAAiB;IAChC,CAAC;EAAE;EACH,WAAW/I,KAAK,GAAG;IAAE,OAAO;MAC1BgJ,GAAG,EAAElH,eAAe;MACpBmH,EAAE,EAAElH;IACN,CAAC;EAAE;AACL,CAAC,EAAE,CAAC,EAAE,EAAE,eAAe,EAAE;EACrB,SAAS,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC;EAC1B,SAAS,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC;EAC1B,eAAe,EAAE,CAAC,CAAC,EAAE,gBAAgB,CAAC;EACtC,kBAAkB,EAAE,CAAC,CAAC,EAAE,mBAAmB,CAAC;EAC5C,YAAY,EAAE,CAAC,CAAC,EAAE,aAAa,CAAC;EAChC,UAAU,EAAE,CAAC,CAAC,CAAC;EACf,iBAAiB,EAAE,CAAC,EAAE,CAAC;EACvB,OAAO,EAAE,CAAC,EAAE,CAAC;EACb,UAAU,EAAE,CAAC,EAAE,CAAC;EAChB,QAAQ,EAAE,CAAC,EAAE,CAAC;EACd,aAAa,EAAE,CAAC,EAAE;AACpB,CAAC,CAAC,CAAC;AACL,SAASmH,qBAAqB,GAAG;EAC/B,IAAI,OAAOC,cAAc,KAAK,WAAW,EAAE;IACzC;EACF;EACA,MAAMC,UAAU,GAAG,CAAC,eAAe,CAAC;EACpCA,UAAU,CAAC5I,OAAO,CAAC7C,OAAO,IAAI;IAAE,QAAQA,OAAO;MAC7C,KAAK,eAAe;QAClB,IAAI,CAACwL,cAAc,CAACE,GAAG,CAAC1L,OAAO,CAAC,EAAE;UAChCwL,cAAc,CAACG,MAAM,CAAC3L,OAAO,EAAEqE,SAAS,CAAC;QAC3C;QACA;IAAM;EACR,CAAC,CAAC;AACN;AAEA,MAAMuH,YAAY,GAAGvH,SAAS;AAC9B,MAAMwH,mBAAmB,GAAGN,qBAAqB;AAEjD,SAASK,YAAY,EAAEC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}